apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-root-ca-rhel
  annotations:
    policies.kyverno.io/title: Add OpenShift Cluster Managed Root CA Certificates as a Volume for RHEL-based containers
    policies.kyverno.io/category: Sample
    policies.kyverno.io/subject: Pod,Volume
    kyverno.io/kyverno-version: 1.6.0
    kyverno.io/kubernetes-version: "1.21"
    policies.kyverno.io/minversion: 1.5.0
    pod-policies.kyverno.io/autogen-controllers: DaemonSet,Deployment,Job,StatefulSet
    policies.kyverno.io/description: >-
      In some cases you would need to trust custom CA certificates for all the containers of a Pod.
      It makes sense to be in a ConfigMap so that you can automount them by only setting an annotation.
      This policy adds a volume to all containers in a Pod containing the certificate if the namespace is
      labeled with `attach-root-ca: rhel` and if the pod is labeled with `attachRootCA: rhel`.
spec:
  background: false
  rules:

  - name: create-ca-configmap
    match:
      any:
        - resources:
            kinds:
              - Pod
            operations:
              - CREATE
              - UPDATE
            namespaceSelector:
              matchExpressions:
                - key: attach-root-ca
                  operator: In
                  values:
                  - rhel
            selector:
              matchLabels:
                attachRootCA: rhel
    generate:
      synchronize: false
      apiVersion: v1
      kind: ConfigMap
      name: root-ca-rhel
      namespace: '{{ "{{ request.object.metadata.namespace }}" }}'
      data:
        kind: ConfigMap
        metadata:
          labels:
            config.openshift.io/inject-trusted-cabundle: 'true'
          data: {}

  - name: add-rhel-ssl-certs
    match:
      any:
        - resources:
            kinds:
            - Pod
            operations:
              - CREATE
              - UPDATE
            namespaceSelector:
              matchExpressions:
                - key: attach-root-ca
                  operator: In
                  values:
                  - rhel
            selector:
              matchLabels:
                attachRootCA: rhel
    #preconditions:
    #  all:
    #  - key: '{{request.object.metadata.annotations."inject-certs" || ""}}'
    #    operator: Equals
    #    value: enabled
    #  - key: "{{request.operation || 'BACKGROUND'}}"
    #    operator: AnyIn
    #    value:
    #      - CREATE
    #      - UPDATE
    mutate:
      foreach:
      - list: "request.object.spec.containers"
        patchStrategicMerge:
          spec:
            containers:
            - name: "{{ element.name }}"
              volumeMounts:
                - mountPath: /etc/pki/ca-trust/extracted/pem
                  name: root-ca-rhel
                  readOnly: true
            volumes:
            - name: root-ca-rhel
              configMap:
                name: root-ca-rhel
                items:
                  - key: ca-bundle.crt
                    path: tls-ca-bundle.pem
